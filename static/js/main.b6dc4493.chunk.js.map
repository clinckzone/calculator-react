{"version":3,"sources":["components/Screen.jsx","components/Button.jsx","components/Numpad.jsx","components/Operatorpad.jsx","components/Functionpad.jsx","expression-interpreter/token.js","expression-interpreter/lexer.js","expression-interpreter/nodes.js","expression-interpreter/parser.js","expression-interpreter/interpreter.js","expression-interpreter/index.js","components/Board.jsx","App.jsx","index.jsx"],"names":["Screen","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","style","screenStyle","this","props","Component","boxSizing","width","height","border","textAlign","background","color","fontWeight","Button","onClick","handleClick","buttonStyle","fontSize","Numpad","_this","layout","i","row","_loop","num","j","push","generateLayout","Operatorpad","Functionpad","tokenTypes","Token","type","Lexer","text","pos","current_char","Error","length","number","isNaN","advance_pointer","parseInt","get_digit","token","char_error","skip_whitespace","Number","BinaryOperator","left","op","right","UnaryOperator","expr","Parser","lexer","current_token","get_next_token","token_type","token_error","eat","factor","node","term","Interpreter","parser","nodeVisitor","parse","visitor","concat","constructor","name","computeResult","interpret","Board","call","state","display","bind","_assertThisInitialized","setState","toString","boardStyle","compositionStyle1","compositionStyle2","flexDirection","App","appStyle","alignItems","fontFamily","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6dc4493.chunk.js","sourcesContent":["import React from 'react';\n\nclass Screen extends React.Component {\n  render() {\n    return (\n      <div style={screenStyle}>\n        {this.props.value}\n      </div>\n    );\n  }\n}\n\nconst  screenStyle = {\n  boxSizing: \"border-box\",\n  width: '100%',\n  height: 50,\n  border: '2px solid black',\n  textAlign: 'right',\n  background: 'black',\n  color: 'white',\n  fontWeight: 700,\n}\n\nexport default Screen;","import React from 'react';\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <button onClick={this.props.handleClick} style={buttonStyle}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nconst buttonStyle = {\n  width: 50,\n  height: 50,\n  background: 'white',\n  border: '2px solid black',\n  fontSize: 'inherit',\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Numpad extends React.Component {\n  generateLayout() {\n    const layout = [];\n    for (let i = 0; i < 3; i++) {\n      const row = [];\n      for (let j = 0; j < 3; j++) {\n        const num = 3 * i + j + 1;\n        row.push(<Button handleClick={() => this.props.handleClick(num)} value={num} />);\n      }\n      layout.push(<div>{row}</div>);\n    }\n    return layout;\n  }\n\n  render() {\n    const layout = this.generateLayout();\n    return <div>{layout}</div>;\n  }\n}\n\nexport default Numpad;\n","import React from 'react';\nimport Button from './Button';\n\nclass Operatorpad extends React.Component {\n\tgenerateLayout() {\n\t\tconst layout = [\n\t\t\t<div>\n\t\t\t\t<Button handleClick={() => this.props.handleClick('+')} value='+' />\n\t\t\t</div>,\n\t\t\t<div>\n\t\t\t\t<Button handleClick={() => this.props.handleClick('-')} value='-' />\n\t\t\t</div>,\n\t\t\t<div>\n\t\t\t\t<Button handleClick={() => this.props.handleClick('×')} value='×' />\n\t\t\t</div>,\n\t\t\t<div>\n\t\t\t\t<Button handleClick={() => this.props.handleClick('÷')} value='÷' />\n\t\t\t</div>,\n\t\t];\n\t\treturn layout;\n\t}\n\n\trender() {\n\t\tconst layout = this.generateLayout();\n\t\treturn <div>{layout}</div>;\n\t}\n}\n\nexport default Operatorpad;\n","import React from 'react';\nimport Button from './Button';\n\nclass Functionpad extends React.Component {\n  generateLayout() {\n    const layout = [\n      [\n        <Button handleClick={() => this.props.handleClick('AC')} value=\"AC\" />,\n        <Button handleClick={() => this.props.handleClick(0)} value=\"0\" />,\n        <Button handleClick={() => this.props.handleClick('.')} value=\".\" />,\n      ],\n      [\n        <Button handleClick={() => this.props.handleClick('(')} value=\"(\" />,\n        <Button handleClick={() => this.props.handleClick(')')} value=\")\" />,\n        <Button handleClick={() => this.props.handleClick('=')} value=\"=\" />,\n      ],\n    ];\n    return layout;\n  }\n\n  render() {\n    const layout = this.generateLayout();\n    return <div>{layout}</div>;\n  }\n}\n\nexport default Functionpad;\n","export const tokenTypes = {\n  INTEGER: 'INTEGER',\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  LPARAN: 'LPARAN',\n  RPARAN: 'RPARAN',\n  EOF: 'EOF',\n};\n\nexport function Token(type, value) {\n  this.type = type;\n  this.value = value;\n}\n","import { Token } from './token';\nimport { tokenTypes } from './token';\n\nexport class Lexer {\n  constructor(text) {\n    this.text = text;\n    this.pos = 0;\n    this.current_char = this.text[this.pos];\n  }\n\n  char_error(text) {\n    throw new Error(text);\n  }\n\n  advance_pointer() {\n    this.pos++;\n    if (this.pos > this.text.length - 1) {\n      this.current_char = null;\n    } else {\n      this.current_char = this.text[this.pos];\n    }\n  }\n\n  get_digit() {\n    let number = '';\n    while (this.current_char != null && !isNaN(this.current_char)) {\n      number += this.current_char;\n      this.advance_pointer();\n    }\n    return parseInt(number);\n  }\n\n  skip_whitespace() {\n    while (this.current_char != null && this.current_char === ' ') {\n      this.advance_pointer();\n    }\n  }\n\n  get_next_token() {\n    while (this.current_char != null) {\n      if (this.current_char === ' ') {\n        this.skip_whitespace();\n        continue;\n      }\n      if (!isNaN(this.current_char)) {\n        const token = new Token(tokenTypes.INTEGER, this.get_digit());\n        return token;\n      }\n      if (this.current_char === '+') {\n        const token = new Token(tokenTypes.PLUS, '+');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '-') {\n        const token = new Token(tokenTypes.MINUS, '-');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '×') {\n        const token = new Token(tokenTypes.MULT, '×');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '÷') {\n        const token = new Token(tokenTypes.DIV, '÷');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '(') {\n        const token = new Token(tokenTypes.LPARAN, '(');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === ')') {\n        const token = new Token(tokenTypes.RPARAN, ')');\n        this.advance_pointer();\n        return token;\n      }\n      this.char_error('Invalid character found');\n    }\n    return new Token(tokenTypes.EOF, this.current_char);\n  }\n}\n","export class Number {\n  constructor(token) {\n    this.token = token;\n    this.value = token.value;\n  }\n}\n\nexport class BinaryOperator {\n  constructor(left, op, right) {\n    this.left = left; //Left Node\n    this.op = op; //Operator Token\n    this.right = right; //Right Node\n  }\n}\n\nexport class UnaryOperator {\n  constructor(op, expr) {\n    this.op = op; //Operator Token\n    this.expr = expr; //Connected node\n  }\n}\n","import { BinaryOperator, Number, UnaryOperator } from './nodes';\nimport { tokenTypes } from './token';\nimport { Token } from './token';\n\nexport class Parser {\n  constructor(lexer) {\n    this.lexer = lexer;\n    this.current_token = this.lexer.get_next_token();\n  }\n\n  token_error(text) {\n    throw new Error(text);\n  }\n\n  eat(token_type) {\n    if (this.current_token.type === token_type) {\n      this.current_token = this.lexer.get_next_token();\n    } else {\n      this.token_error('Invalid token detected');\n    }\n  }\n\n  factor() {\n    const token = new Token(this.current_token.type, this.current_token.value);\n    if (token.type === tokenTypes.PLUS) {\n      this.eat(tokenTypes.PLUS);\n      const node = new UnaryOperator(token, this.factor());\n      return node;\n    }\n    if (token.type === tokenTypes.MINUS) {\n      this.eat(tokenTypes.MINUS);\n      const node = new UnaryOperator(token, this.factor());\n      return node;\n    }\n    if (token.type === tokenTypes.INTEGER) {\n      this.eat(tokenTypes.INTEGER);\n      const node = new Number(token);\n      return node;\n    }\n    if (token.type === tokenTypes.LPARAN) {\n      this.eat(tokenTypes.LPARAN);\n      const node = this.expr();\n      this.eat(tokenTypes.RPARAN);\n      return node;\n    }\n  }\n\n  term() {\n    let node = this.factor();\n    while (\n      this.current_token.type === tokenTypes.MULT ||\n      this.current_token.type === tokenTypes.DIV\n    ) {\n      const token = new Token(this.current_token.type, this.current_token.value);\n      if (token.type === tokenTypes.MULT) {\n        this.eat(tokenTypes.MULT);\n      } else if (token.type === tokenTypes.DIV) {\n        this.eat(tokenTypes.DIV);\n      }\n      node = new BinaryOperator(node, token, this.factor());\n    }\n    return node;\n  }\n\n  expr() {\n    let node = this.term();\n    while (\n      this.current_token.type === tokenTypes.PLUS ||\n      this.current_token.type === tokenTypes.MINUS\n    ) {\n      const token = new Token(this.current_token.type, this.current_token.value);\n      if (token.type === tokenTypes.PLUS) {\n        this.eat(tokenTypes.PLUS);\n      } else if (token.type === tokenTypes.MINUS) {\n        this.eat(tokenTypes.MINUS);\n      }\n      node = new BinaryOperator(node, token, this.term());\n    }\n    return node;\n  }\n\n  parse() {\n    const ast = this.expr();\n    return ast;\n  }\n}\n","import { tokenTypes } from './token';\n\nexport class Interpreter {\n  constructor(parser) {\n    this.parser = parser;\n  }\n\n  interpret() {\n    const result = this.nodeVisitor(this.parser.parse());\n    return result;\n  }\n\n  nodeVisitor(node) {\n    const visitor = `visit_${node.constructor.name}`;\n    if (this[visitor]) {\n      return this[visitor](node);\n    } else {\n      throw new Error(`No method found for type ${node.constructor.name}`);\n    }\n  }\n\n  visit_BinaryOperator(node) {\n    if (node.op.type === tokenTypes.PLUS) {\n      return this.nodeVisitor(node.left) + this.nodeVisitor(node.right);\n    }\n    if (node.op.type === tokenTypes.MINUS) {\n      return this.nodeVisitor(node.left) - this.nodeVisitor(node.right);\n    }\n    if (node.op.type === tokenTypes.MULT) {\n      return this.nodeVisitor(node.left) * this.nodeVisitor(node.right);\n    }\n    if (node.op.type === tokenTypes.DIV) {\n      return this.nodeVisitor(node.left) / this.nodeVisitor(node.right);\n    }\n  }\n\n  visit_Number(node) {\n    return node.value;\n  }\n\n  visit_UnaryOperator(node) {\n    if (node.op.type === tokenTypes.PLUS) {\n      return this.nodeVisitor(node.expr);\n    }\n    if (node.op.type === tokenTypes.MINUS) {\n      return -1 * this.nodeVisitor(node.expr);\n    }\n  }\n}\n","import { Lexer } from './lexer';\nimport { Parser } from './parser';\nimport { Interpreter } from './interpreter';\n\nexport function computeResult(expr) {\n  const lexer = new Lexer(expr);\n  const parser = new Parser(lexer);\n  const interpreter = new Interpreter(parser);\n  return interpreter.interpret();\n}\n","import React from 'react';\nimport Screen from './Screen';\nimport Numpad from './Numpad';\nimport Operatorpad from './Operatorpad';\nimport Functionpad from './Functionpad';\nimport { computeResult } from '../expression-interpreter';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdisplay: '',\n\t\t};\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(value) {\n\t\tif (value !== '=') {\n\t\t\tif (value === 'AC') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdisplay: '',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tconst d = state.display + value.toString();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdisplay: d,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: computeResult(this.state.display),\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={boardStyle}>\n\t\t\t\t<Screen value={this.state.display} />\n\t\t\t\t<div style={compositionStyle1}>\n\t\t\t\t\t<div style={compositionStyle2}>\n\t\t\t\t\t\t<Numpad handleClick={this.handleClick} />\n\t\t\t\t\t\t<Functionpad handleClick={this.handleClick} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Operatorpad handleClick={this.handleClick} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst compositionStyle1 = {\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n};\n\nconst compositionStyle2 = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n};\n\nconst boardStyle = {\n\twidth: 200,\n};\n\nexport default Board;\n","import React from 'react';\nimport Board from './components/Board';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={appStyle}>\n\t\t\t\t<h1>Calculator</h1>\n\t\t\t\t<Board />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst appStyle = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\talignItems: 'center',\n\tfontFamily: 'Arial',\n\tfontSize: 20,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}