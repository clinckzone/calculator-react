{"version":3,"sources":["components/Screen.jsx","components/Button.jsx","components/Numpad.jsx","components/Operatorpad.jsx","components/Functionpad.jsx","expression-interpreter/token.js","expression-interpreter/lexer.js","expression-interpreter/nodes.js","expression-interpreter/parser.js","expression-interpreter/interpreter.js","expression-interpreter/index.js","components/Board.jsx","App.jsx","index.jsx"],"names":["Screen","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","style","screenStyle","this","props","Component","boxSizing","width","height","border","textAlign","background","color","fontSize","fontWeight","Button","_this","call","state","isHovering","isPressed","_this2","onMouseDown","setState","onMouseUp","onMouseEnter","onMouseLeave","onClick","handleClick","buttonStyle","transition","Numpad","layout","i","row","_loop","num","j","push","generateLayout","Operatorpad","Functionpad","tokenTypes","Token","type","Lexer","text","pos","current_char","Error","length","number","isNaN","advance_pointer","parseInt","get_digit","token","char_error","skip_whitespace","Number","name","BinaryOperator","left","op","right","UnaryOperator","expr","Parser","lexer","current_token","get_next_token","token_type","token_error","eat","factor","node","term","Interpreter","parser","nodeVisitor","parse","visitor","concat","computeResult","interpret","Board","display","bind","_assertThisInitialized","toString","boardStyle","compositionStyle1","compositionStyle2","flexDirection","App","appStyle","alignItems","fontFamily","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e3766db.chunk.js","sourcesContent":["import React from 'react';\n\nclass Screen extends React.Component {\n\trender() {\n\t\treturn <div style={screenStyle}>{this.props.value}</div>;\n\t}\n}\n\nconst screenStyle = {\n\tboxSizing: 'border-box',\n\twidth: '100%',\n\theight: '100%',\n\tborder: '2px solid black',\n\ttextAlign: 'right',\n\tbackground: 'black',\n\tcolor: 'white',\n\tfontSize: '36px',\n\tfontWeight: 700,\n};\n\nexport default Screen;\n","import React from 'react';\n\nclass Button extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisHovering: false,\n\t\t\tisPressed: false,\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tonMouseDown={() => this.setState({ isPressed: true })}\n\t\t\t\tonMouseUp={() => this.setState({ isPressed: false })}\n\t\t\t\tonMouseEnter={() => this.setState({ isHovering: true })}\n\t\t\t\tonMouseLeave={() => this.setState({ isHovering: false })}\n\t\t\t\tonClick={this.props.handleClick}\n\t\t\t\tstyle={buttonStyle(this.state)}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nconst buttonStyle = (state) => ({\n\twidth: 100,\n\theight: 100,\n\ttransition: 'background 0.3s',\n\tbackground: state.isPressed ? 'gray' : state.isHovering ? 'black' : 'white',\n\tcolor: state.isHovering ? 'white' : 'black',\n\tborder: '2px solid black',\n\tfontWeight: 'bold',\n\tfontSize: '36px',\n});\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Numpad extends React.Component {\n  generateLayout() {\n    const layout = [];\n    for (let i = 0; i < 3; i++) {\n      const row = [];\n      for (let j = 0; j < 3; j++) {\n        const num = 3 * i + j + 1;\n        row.push(<Button handleClick={() => this.props.handleClick(num)} value={num} />);\n      }\n      layout.push(<div>{row}</div>);\n    }\n    return layout;\n  }\n\n  render() {\n    const layout = this.generateLayout();\n    return <div>{layout}</div>;\n  }\n}\n\nexport default Numpad;\n","import React from 'react';\nimport Button from './Button';\n\nclass Operatorpad extends React.Component {\n  generateLayout() {\n    const layout = [\n      <div>\n        <Button handleClick={() => this.props.handleClick('+')} value='+' />\n      </div>,\n      <div>\n        <Button handleClick={() => this.props.handleClick('-')} value='-' />\n      </div>,\n      <div>\n        <Button handleClick={() => this.props.handleClick('×')} value='×' />\n      </div>,\n      <div>\n        <Button handleClick={() => this.props.handleClick('÷')} value='÷' />\n      </div>,\n    ];\n    return layout;\n  }\n\n  render() {\n    const layout = this.generateLayout();\n    return <div>{layout}</div>;\n  }\n}\n\nexport default Operatorpad;\n","import React from 'react';\nimport Button from './Button';\n\nclass Functionpad extends React.Component {\n  generateLayout() {\n    const layout = [\n      [\n        <Button handleClick={() => this.props.handleClick('AC')} value=\"AC\" />,\n        <Button handleClick={() => this.props.handleClick(0)} value=\"0\" />,\n        <Button handleClick={() => this.props.handleClick('.')} value=\".\" />,\n      ],\n      [\n        <Button handleClick={() => this.props.handleClick('(')} value=\"(\" />,\n        <Button handleClick={() => this.props.handleClick(')')} value=\")\" />,\n        <Button handleClick={() => this.props.handleClick('=')} value=\"=\" />,\n      ],\n    ];\n    return layout;\n  }\n\n  render() {\n    const layout = this.generateLayout();\n    return <div>{layout}</div>;\n  }\n}\n\nexport default Functionpad;\n","export const tokenTypes = {\n  INTEGER: 'INTEGER',\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  LPARAN: 'LPARAN',\n  RPARAN: 'RPARAN',\n  EOF: 'EOF',\n};\n\nexport function Token(type, value) {\n  this.type = type;\n  this.value = value;\n}\n","import { Token } from './token';\nimport { tokenTypes } from './token';\n\nexport class Lexer {\n  constructor(text) {\n    this.text = text;\n    this.pos = 0;\n    this.current_char = this.text[this.pos];\n  }\n\n  char_error(text) {\n    throw new Error(text);\n  }\n\n  advance_pointer() {\n    this.pos++;\n    if (this.pos > this.text.length - 1) {\n      this.current_char = null;\n    } else {\n      this.current_char = this.text[this.pos];\n    }\n  }\n\n  get_digit() {\n    let number = '';\n    while (this.current_char != null && !isNaN(this.current_char)) {\n      number += this.current_char;\n      this.advance_pointer();\n    }\n    return parseInt(number);\n  }\n\n  skip_whitespace() {\n    while (this.current_char != null && this.current_char === ' ') {\n      this.advance_pointer();\n    }\n  }\n\n  get_next_token() {\n    while (this.current_char != null) {\n      if (this.current_char === ' ') {\n        this.skip_whitespace();\n        continue;\n      }\n      if (!isNaN(this.current_char)) {\n        const token = new Token(tokenTypes.INTEGER, this.get_digit());\n        return token;\n      }\n      if (this.current_char === '+') {\n        const token = new Token(tokenTypes.PLUS, '+');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '-') {\n        const token = new Token(tokenTypes.MINUS, '-');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '×') {\n        const token = new Token(tokenTypes.MULT, '×');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '÷') {\n        const token = new Token(tokenTypes.DIV, '÷');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === '(') {\n        const token = new Token(tokenTypes.LPARAN, '(');\n        this.advance_pointer();\n        return token;\n      }\n      if (this.current_char === ')') {\n        const token = new Token(tokenTypes.RPARAN, ')');\n        this.advance_pointer();\n        return token;\n      }\n      this.char_error('Invalid character found');\n    }\n    return new Token(tokenTypes.EOF, this.current_char);\n  }\n}\n","export class Number {\n  constructor(token) {\n    this.name = 'Number';\n    this.token = token;\n    this.value = token.value;\n  }\n}\n\nexport class BinaryOperator {\n  constructor(left, op, right) {\n    this.name = 'BinaryOperator';\n    this.left = left; //Left Node\n    this.op = op; //Operator Token\n    this.right = right; //Right Node\n  }\n}\n\nexport class UnaryOperator {\n  constructor(op, expr) {\n    this.name = 'UnaryOperator';\n    this.op = op; //Operator Token\n    this.expr = expr; //Connected node\n  }\n}\n","import { BinaryOperator, Number, UnaryOperator } from './nodes';\nimport { tokenTypes } from './token';\nimport { Token } from './token';\n\nexport class Parser {\n  constructor(lexer) {\n    this.lexer = lexer;\n    this.current_token = this.lexer.get_next_token();\n  }\n\n  token_error(text) {\n    throw new Error(text);\n  }\n\n  eat(token_type) {\n    if (this.current_token.type === token_type) {\n      this.current_token = this.lexer.get_next_token();\n    } else {\n      this.token_error('Invalid token detected');\n    }\n  }\n\n  factor() {\n    const token = new Token(this.current_token.type, this.current_token.value);\n    if (token.type === tokenTypes.PLUS) {\n      this.eat(tokenTypes.PLUS);\n      const node = new UnaryOperator(token, this.factor());\n      return node;\n    }\n    if (token.type === tokenTypes.MINUS) {\n      this.eat(tokenTypes.MINUS);\n      const node = new UnaryOperator(token, this.factor());\n      return node;\n    }\n    if (token.type === tokenTypes.INTEGER) {\n      this.eat(tokenTypes.INTEGER);\n      const node = new Number(token);\n      return node;\n    }\n    if (token.type === tokenTypes.LPARAN) {\n      this.eat(tokenTypes.LPARAN);\n      const node = this.expr();\n      this.eat(tokenTypes.RPARAN);\n      return node;\n    }\n  }\n\n  term() {\n    let node = this.factor();\n    while (\n      this.current_token.type === tokenTypes.MULT ||\n      this.current_token.type === tokenTypes.DIV\n    ) {\n      const token = new Token(this.current_token.type, this.current_token.value);\n      if (token.type === tokenTypes.MULT) {\n        this.eat(tokenTypes.MULT);\n      } else if (token.type === tokenTypes.DIV) {\n        this.eat(tokenTypes.DIV);\n      }\n      node = new BinaryOperator(node, token, this.factor());\n    }\n    return node;\n  }\n\n  expr() {\n    let node = this.term();\n    while (\n      this.current_token.type === tokenTypes.PLUS ||\n      this.current_token.type === tokenTypes.MINUS\n    ) {\n      const token = new Token(this.current_token.type, this.current_token.value);\n      if (token.type === tokenTypes.PLUS) {\n        this.eat(tokenTypes.PLUS);\n      } else if (token.type === tokenTypes.MINUS) {\n        this.eat(tokenTypes.MINUS);\n      }\n      node = new BinaryOperator(node, token, this.term());\n    }\n    return node;\n  }\n\n  parse() {\n    const ast = this.expr();\n    return ast;\n  }\n}\n","import { tokenTypes } from './token';\n\nexport class Interpreter {\n  constructor(parser) {\n    this.parser = parser;\n  }\n\n  interpret() {\n    const result = this.nodeVisitor(this.parser.parse());\n    return result;\n  }\n\n  nodeVisitor(node) {\n    const visitor = `visit_${node.name}`;\n    if (this[visitor]) {\n      return this[visitor](node);\n    } else {\n      throw new Error(`Operator not found`);\n    }\n  }\n\n  visit_BinaryOperator(node) {\n    if (node.op.type === tokenTypes.PLUS) {\n      return this.nodeVisitor(node.left) + this.nodeVisitor(node.right);\n    }\n    if (node.op.type === tokenTypes.MINUS) {\n      return this.nodeVisitor(node.left) - this.nodeVisitor(node.right);\n    }\n    if (node.op.type === tokenTypes.MULT) {\n      return this.nodeVisitor(node.left) * this.nodeVisitor(node.right);\n    }\n    if (node.op.type === tokenTypes.DIV) {\n      return this.nodeVisitor(node.left) / this.nodeVisitor(node.right);\n    }\n  }\n\n  visit_Number(node) {\n    return node.value;\n  }\n\n  visit_UnaryOperator(node) {\n    if (node.op.type === tokenTypes.PLUS) {\n      return this.nodeVisitor(node.expr);\n    }\n    if (node.op.type === tokenTypes.MINUS) {\n      return -1 * this.nodeVisitor(node.expr);\n    }\n  }\n}\n","import { Lexer } from './lexer';\nimport { Parser } from './parser';\nimport { Interpreter } from './interpreter';\n\nexport function computeResult(expr) {\n  const lexer = new Lexer(expr);\n  const parser = new Parser(lexer);\n  const interpreter = new Interpreter(parser);\n  return interpreter.interpret();\n}\n","import React from 'react';\nimport Screen from './Screen';\nimport Numpad from './Numpad';\nimport Operatorpad from './Operatorpad';\nimport Functionpad from './Functionpad';\nimport { computeResult } from '../expression-interpreter';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdisplay: '',\n\t\t};\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(value) {\n\t\tif (value !== '=') {\n\t\t\tif (value === 'AC') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdisplay: '',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tconst d = state.display + value.toString();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdisplay: d,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: computeResult(this.state.display),\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={boardStyle}>\n\t\t\t\t<Screen value={this.state.display} />\n\t\t\t\t<div style={compositionStyle1}>\n\t\t\t\t\t<div style={compositionStyle2}>\n\t\t\t\t\t\t<Numpad handleClick={this.handleClick} />\n\t\t\t\t\t\t<Functionpad handleClick={this.handleClick} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Operatorpad handleClick={this.handleClick} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst compositionStyle1 = {\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n};\n\nconst compositionStyle2 = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n};\n\nconst boardStyle = {\n\twidth: 400,\n\theight: 100,\n};\n\nexport default Board;\n","import React from 'react';\nimport Board from './components/Board';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={appStyle}>\n\t\t\t\t<h1 style={{ fontSize: '64px' }}>Calculator</h1>\n\t\t\t\t<Board />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst appStyle = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\talignItems: 'center',\n\tfontFamily: 'Arial',\n\tfontSize: 20,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}